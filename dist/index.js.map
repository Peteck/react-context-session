{"version":3,"file":"index.js","sources":["../src/dispatcher.ts","../src/provider.tsx","../src/use-session.ts"],"sourcesContent":["import {\n    SessionDispatchFunc,\n    SessionGenericData,\n    SessionValueType,\n} from \"./types\";\n\nexport class Dispatcher<DataType extends SessionGenericData> {\n    dispatchers: Partial<\n        {\n            [key in keyof DataType]: [SessionDispatchFunc];\n        }\n    > = {};\n\n    dispatch(key: keyof DataType, value: SessionValueType): void {\n        if (typeof this.dispatchers[key] === \"undefined\") {\n            return;\n        }\n\n        for (let i = 0; i < this.dispatchers[key]!.length; i++) {\n            this.dispatchers[key][i](value);\n        }\n    }\n\n    register(key: keyof DataType, dispatchFunc: SessionDispatchFunc): void {\n        if (typeof this.dispatchers[key] === \"undefined\") {\n            this.dispatchers[key] = [dispatchFunc];\n        } else {\n            this.dispatchers[key]!.push(dispatchFunc);\n        }\n    }\n\n    unregister(key: keyof DataType, dispatchFunc: SessionDispatchFunc): void {\n        if (typeof this.dispatchers[key] === \"undefined\") {\n            return;\n        }\n\n        for (let j = 0; j < this.dispatchers[key]!.length; j++) {\n            if (this.dispatchers[key][j] === dispatchFunc) {\n                this.dispatchers[key]!.splice(j, 1);\n            }\n        }\n    }\n}\n","import React, {\n    createContext,\n    ReactNode,\n    useContext,\n    useEffect,\n    useState,\n} from \"react\";\nimport {\n    SessionContextKey,\n    SessionGenericContext,\n    SessionGenericData,\n    SessionOnChange,\n} from \"./types\";\nimport { Dispatcher } from \"./dispatcher\";\nimport cloneDeep from \"lodash.clonedeep\";\n\nconst ReactSessionContext = createContext<SessionContextKey>(\"default\");\n\ntype SessionContexts = {\n    [key: string]: SessionGenericContext | undefined;\n};\nconst sessionContexts: SessionContexts = {};\n\nexport function useSessionContext<DataType extends SessionGenericData>() {\n    return sessionContexts[useContext<string>(ReactSessionContext)] as\n        | SessionGenericContext<DataType>\n        | undefined;\n}\n\nexport function getSessionContexts() {\n    const data = {};\n    for (const i in sessionContexts) {\n        data[i] = cloneDeep(sessionContexts);\n    }\n    return data;\n}\n\nexport function hasSessionContext(contextKey: string) {\n    return !!sessionContexts[contextKey];\n}\n\nfunction initializeSession(\n    contextKey: SessionContextKey,\n    data: SessionGenericData,\n    onChange?: SessionOnChange<SessionGenericData>,\n) {\n    if (!hasSessionContext(contextKey)) {\n        sessionContexts[contextKey] = {\n            data: cloneDeep(data),\n            dispatcher: new Dispatcher<SessionGenericData>(),\n            onChange,\n        };\n    }\n}\n\nfunction clearSessionContext(contextKey: string) {\n    delete sessionContexts[contextKey];\n}\n\nfunction getUniqueContextName() {\n    return `default-${Date.now()}-${Math.floor(Math.random() * 999999)}`;\n}\n\nexport function ProvideSession<DataType extends SessionGenericData>({\n    children,\n    name,\n    data,\n    onChange,\n    keepOnUnmount,\n}: {\n    children: ReactNode;\n    name?: string;\n    data: DataType;\n    onChange?: SessionOnChange<DataType>;\n    keepOnUnmount?: boolean;\n}) {\n    const [contextKey] = useState<string>(name || getUniqueContextName);\n\n    initializeSession(\n        contextKey,\n        data,\n        onChange as SessionOnChange<SessionGenericData>,\n    );\n\n    useEffect(() => {\n        return () => {\n            if (!keepOnUnmount) {\n                clearSessionContext(contextKey);\n            }\n        };\n    });\n\n    return (\n        <ReactSessionContext.Provider value={contextKey}>\n            {children}\n        </ReactSessionContext.Provider>\n    );\n}\n","import {\n    useState,\n    useEffect,\n    useCallback,\n    Dispatch,\n    SetStateAction,\n} from \"react\";\nimport { useSessionContext } from \"./provider\";\nimport { SessionGenericData } from \"./types\";\n\nexport function useSession<DataType extends SessionGenericData>(): <\n    S extends keyof DataType\n>(\n    dependencies?: S[],\n) => [\n    { [K in S]: DataType[K] },\n    <P extends keyof DataType>(key: P, value: DataType[P]) => void,\n] {\n    return useSessionBase;\n}\n\nexport function useSessionBase<\n    DataType extends SessionGenericData,\n    S extends keyof DataType = keyof DataType\n>(\n    dependencies?: S[],\n): [\n    { [K in S]: DataType[K] },\n    <P extends keyof DataType>(key: P, value: DataType[P]) => void,\n] {\n    const context = useSessionContext<DataType>();\n    if (typeof context === \"undefined\") {\n        throw new Error(\n            `\"useSession\" is called outside a session context. Make sure to wrap your component with a \"<ProvideSession data={...} />\"`,\n        );\n    }\n\n    const k = dependencies || [];\n    const states: {\n        [key: string]: [any, Dispatch<SetStateAction<any>>];\n    } = {};\n\n    for (let i = 0; i < k.length; i++) {\n        // By design the dependencies cannot change, and therefore the states will always be the same\n        // eslint-disable-next-line\n        states[k[i] as string] = useState(context.data[k[i] as string]);\n    }\n\n    useEffect(() => {\n        for (let i = 0; i < k.length; i++) {\n            context.dispatcher.register(\n                k[i] as string,\n                states[k[i] as string][1],\n            );\n        }\n\n        return () => {\n            for (let i = 0; i < k.length; i++) {\n                context.dispatcher.unregister(\n                    k[i] as string,\n                    states[k[i] as string][1],\n                );\n            }\n        };\n    }, []);\n\n    const set = useCallback(\n        <P extends keyof DataType>(key: P, value: DataType[P]) => {\n            context.data[key] = value;\n\n            if (context.onChange) {\n                context.onChange(context.data);\n            }\n\n            context.dispatcher.dispatch(key, value);\n        },\n        [],\n    );\n\n    const output: any = {};\n    for (let i = 0; i < k.length; i++) {\n        output[k[i]] = states[k[i] as string][0];\n    }\n\n    return [output, set];\n}\n"],"names":["Dispatcher","dispatch","key","value","dispatchers","i","length","register","dispatchFunc","push","unregister","j","splice","ReactSessionContext","createContext","sessionContexts","useSessionContext","useContext","getSessionContexts","data","cloneDeep","hasSessionContext","contextKey","initializeSession","onChange","dispatcher","clearSessionContext","getUniqueContextName","Date","now","Math","floor","random","ProvideSession","children","name","keepOnUnmount","useState","useEffect","React","Provider","useSession","useSessionBase","dependencies","context","Error","k","states","set","useCallback","output"],"mappings":"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"}